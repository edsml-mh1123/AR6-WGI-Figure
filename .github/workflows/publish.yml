name: Publish to Zenodo

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish-fig:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Create ZIP of code
        run: zip -r code.zip code/

      - name: Validate .zenodo.json
        run: |
          if [ ! -f ".zenodo.json" ]; then
            echo "Error: .zenodo.json missing!"
            exit 1
          fi
          echo "Current metadata:"
          cat .zenodo.json

      - name: Get existing concept ID
        id: get_concept
        run: |
          CONCEPT_ID=$(jq -r '.conceptrecid // empty' .zenodo.json)
          echo "concept_id=$CONCEPT_ID" >> $GITHUB_OUTPUT
          echo "CONCEPT_ID=$CONCEPT_ID" >> $GITHUB_ENV

      - name: Create/Update Zenodo deposition
        id: zenodo_deposition
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ -n "$CONCEPT_ID" ]; then
            echo "Creating new version for concept $CONCEPT_ID"
            RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$CONCEPT_ID/actions/newversion" \
              -H "Authorization: Bearer $ZENODO_TOKEN")
          else
            echo "Creating new deposition"
            METADATA=$(cat .zenodo.json)
            RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions" \
              -H "Authorization: Bearer $ZENODO_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"metadata\": $METADATA}")
          fi

          DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.id')
          NEW_CONCEPT_ID=$(echo "$RESPONSE" | jq -r '.conceptrecid')
          
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV
          echo "CONCEPT_ID=$NEW_CONCEPT_ID" >> $GITHUB_ENV

      - name: Update .zenodo.json with Concept ID
        if: steps.zenodo_deposition.outputs.CONCEPT_ID != '' && steps.get_concept.outputs.concept_id == ''
        run: |
          jq --arg concept_id "$CONCEPT_ID" '.conceptrecid = $concept_id' .zenodo.json > tmp.json
          mv tmp.json .zenodo.json
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .zenodo.json
          git commit -m "Update Zenodo concept ID"
          git push

      - name: Upload files to Zenodo
        uses: zenodraft/action@0.13.3
        with:
          concept: ${{ steps.zenodo_deposition.outputs.CONCEPT_ID }}
          metadata: .zenodo.json
          publish: true
          sandbox: true
          filenames: |
            code.zip
        env:
          ZENODO_SANDBOX_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}

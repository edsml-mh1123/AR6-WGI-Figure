name: Publish to Zenodo

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-fig:
    runs-on: ubuntu-latest
    name: Publish code to Zenodo
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create ZIP of Code Folder
        run: zip -r code.zip code/

      - name: Get or Create Concept and Deposition on Zenodo
        id: zenodo_deposition
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
          ZENODO_API_URL: "https://sandbox.zenodo.org/api/deposit/depositions"
        run: |
          if [ -z "$ZENODO_ACCESS_TOKEN" ]; then
            echo "Error: ZENODO_ACCESS_TOKEN is not set."
            exit 1
          fi

          # Fetch existing depositions (check if there's an existing Concept)
          RESPONSE=$(curl -s -X GET "$ZENODO_API_URL" -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          # Check if there's an existing Concept, else create a new one
          if [ "$(echo "$RESPONSE" | jq length)" -eq 0 ]; then
            echo "No existing depositions found. Creating a new Concept and Deposition..."
            RESPONSE=$(curl -s -X POST "$ZENODO_API_URL" \
              -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              --data '{}')
          fi

          # Parse the Concept ID and Deposition ID
          CONCEPT_ID=$(echo "$RESPONSE" | jq -r '.conceptrecid')
          DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.id')

          if [ -z "$CONCEPT_ID" ] || [ "$CONCEPT_ID" = "null" ]; then
            echo "Error: Failed to fetch or create Concept."
            exit 1
          fi

          echo "Using Concept ID: $CONCEPT_ID"
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV

      - name: Upload ZIP to Zenodo
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
          ZENODO_API_URL: "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/files"
        run: |
          if [ ! -f "code.zip" ]; then
            echo "Error: code.zip not found!"
            exit 1
          fi

          # Upload the new version (ZIP file)
          RESPONSE=$(curl -s -X POST "$ZENODO_API_URL" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
            -F "file=@code.zip;filename=code.zip")

          if [ "$(echo "$RESPONSE" | jq -r '.checksum')" = "null" ]; then
            echo "Error: Upload failed."
            exit 1
          fi

          echo "File uploaded successfully."

      - name: Publish Deposition as a New Version
        if: success()
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
          ZENODO_API_URL: "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/publish"
        run: |
          # Publish the new deposition (version)
          RESPONSE=$(curl -s -X POST "$ZENODO_API_URL" -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          if [ "$(echo "$RESPONSE" | jq -r '.submitted')" != "true" ]; then
            echo "Error: Publishing failed."
            exit 1
          fi

          echo "Deposition (new version) published successfully."

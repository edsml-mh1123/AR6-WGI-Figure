name: Publish to Zenodo

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish-to-zenodo:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create ZIP of code folder
        run: zip -r code.zip code/

      - name: Validate `.zenodo.json`
        run: |
          if [ ! -f ".zenodo.json" ]; then
            echo "Error: .zenodo.json file is missing!"
            exit 1
          fi
          echo "Contents of .zenodo.json:"
          cat .zenodo.json

      - name: Get Concept ID from file
        id: get_concept_id
        run: |
          if [ -f zenodo_concept_id.txt ]; then
            CONCEPT_ID=$(cat zenodo_concept_id.txt)
            echo "Using existing Concept ID: $CONCEPT_ID"
          else
            echo "No existing Concept ID found. A new deposition will be created."
            CONCEPT_ID=""
          fi
          echo "concept_id=$CONCEPT_ID" >> $GITHUB_OUTPUT

      - name: Create/Update Zenodo deposition
        id: zenodo_deposition
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ -n "${{ steps.get_concept_id.outputs.concept_id }}" ]; then
            # Create new version using existing Concept ID
            RESPONSE=$(curl -s -X POST \
              "https://sandbox.zenodo.org/api/deposit/depositions/${{ steps.get_concept_id.outputs.concept_id }}/actions/newversion" \
              -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
            DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.id')
            echo "concept_id=${{ steps.get_concept_id.outputs.concept_id }}" >> $GITHUB_OUTPUT
            echo "deposition_id=$DEPOSITION_ID" >> $GITHUB_OUTPUT
          else
            # Create new deposition
            RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions" \
              -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              --data '{}')
            DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.id')
            CONCEPT_ID=$(echo "$RESPONSE" | jq -r '.conceptrecid')
            echo "$CONCEPT_ID" > zenodo_concept_id.txt
            echo "concept_id=$CONCEPT_ID" >> $GITHUB_OUTPUT
            echo "deposition_id=$DEPOSITION_ID" >> $GITHUB_OUTPUT
          fi

      - name: Commit Concept ID file (first-time only)
        if: steps.get_concept_id.outputs.concept_id == ''
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add zenodo_concept_id.txt
          git commit -m "[GitHub Actions] Add Zenodo Concept ID"
          git push origin HEAD:${{ github.ref_name }}

      - name: Upload files to Zenodo
        uses: zenodraft/action@0.13.3
        with:
          concept: ${{ steps.zenodo_deposition.outputs.concept_id }}
          metadata: .zenodo.json
          publish: false
          sandbox: true
          filenames: |
            code.zip

      - name: Publish deposition on Zenodo
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          curl -X POST "https://sandbox.zenodo.org/api/deposit/depositions/${{ steps.zenodo_deposition.outputs.deposition_id }}/actions/publish" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN"

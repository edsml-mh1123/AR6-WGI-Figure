name: Publish to Zenodo

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-fig:
    runs-on: ubuntu-latest
    name: Publish code to Zenodo
    steps:
      - name: Checkout the contents of your repository
        uses: actions/checkout@v4

      - name: Create ZIP of code folder
        run: zip -r code.zip code/

      - name: Get existing Concept ID or create new deposition
        id: zenodo_deposition
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ -z "$ZENODO_ACCESS_TOKEN" ]; then
            echo "Error: ZENODO_ACCESS_TOKEN is not set."
            exit 1
          fi

          # Fetch existing depositions
          RESPONSE=$(curl -s -X GET "https://sandbox.zenodo.org/api/deposit/depositions" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          # Extract latest deposition
          DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.[0].id // empty')
          CONCEPT_ID=$(echo "$RESPONSE" | jq -r '.[0].conceptrecid // empty')
          STATE=$(echo "$RESPONSE" | jq -r '.[0].state // empty')

          echo "Using existing Concept ID: $CONCEPT_ID (Deposition ID: $DEPOSITION_ID, State: $STATE)"

          # If published, create a new version
          if [ "$STATE" = "published" ]; then
            echo "Creating a new version..."
            VERSION_RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/newversion" \
              -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

            # Extract new Deposition ID
            NEW_DEPOSITION_ID=$(echo "$VERSION_RESPONSE" | jq -r '.links.latest_draft // empty' | awk -F'/' '{print $NF}')
            
            if [ -z "$NEW_DEPOSITION_ID" ] || [ "$NEW_DEPOSITION_ID" = "null" ]; then
              echo "Error: Failed to create new version."
              exit 1
            fi

            echo "New version created: $NEW_DEPOSITION_ID"
            DEPOSITION_ID=$NEW_DEPOSITION_ID
          fi

          echo "Final Deposition ID: $DEPOSITION_ID"
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV

      - name: Upload the ZIP file to Zenodo
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ ! -f "code.zip" ]; then
            echo "Error: code.zip file does not exist!"
            exit 1
          fi
          curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/files" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
            -F "file=@code.zip;filename=code.zip"

      - name: Publish the Zenodo deposition
        if: success()
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/publish" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
          if [[ $? -ne 0 ]]; then
            echo "Error publishing the deposition."
            exit 1
          fi
          echo "Deposition published successfully."

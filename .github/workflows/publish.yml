name: Publish to Zenodo

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-fig:
    runs-on: ubuntu-latest
    name: Publish code to Zenodo
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create ZIP of Code Folder
        run: zip -r code.zip code/

      - name: Get Existing Concept ID or Create New Deposition
        id: zenodo_deposition
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ -z "$ZENODO_ACCESS_TOKEN" ]; then
            echo "Error: ZENODO_ACCESS_TOKEN is not set."
            exit 1
          fi

          # Fetch existing depositions by Concept ID
          RESPONSE=$(curl -s -X GET "https://sandbox.zenodo.org/api/deposit/depositions" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          # Check if we have any existing depositions
          if [ "$(echo "$RESPONSE" | jq length)" -eq 0 ]; then
            echo "No existing depositions found. Creating a new one..."
            CREATE_RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions" \
              -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              --data '{}')

            DEPOSITION_ID=$(echo "$CREATE_RESPONSE" | jq -r '.id')
            CONCEPT_ID=$(echo "$CREATE_RESPONSE" | jq -r '.conceptrecid')

            if [ -z "$DEPOSITION_ID" ] || [ "$DEPOSITION_ID" = "null" ]; then
              echo "Error: Failed to create a new deposition."
              exit 1
            fi
          else
            # Use the existing Concept ID and create a new Deposition
            CONCEPT_ID=$(echo "$RESPONSE" | jq -r '.[0].conceptrecid')
            CREATE_NEW_DEPOSITION_RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions" \
              -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              --data '{"conceptrecid": "'"$CONCEPT_ID"'"}')

            DEPOSITION_ID=$(echo "$CREATE_NEW_DEPOSITION_RESPONSE" | jq -r '.id')

            if [ -z "$DEPOSITION_ID" ] || [ "$DEPOSITION_ID" = "null" ]; then
              echo "Error: Failed to create a new deposition under the existing Concept."
              exit 1
            fi
          fi

          echo "Using Concept ID: $CONCEPT_ID"
          echo "Final Deposition ID: $DEPOSITION_ID"
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV

      - name: Upload ZIP to Zenodo
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ ! -f "code.zip" ]; then
            echo "Error: code.zip not found!"
            exit 1
          fi

          UPLOAD_URL="https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/files"
          RESPONSE=$(curl -s -X POST "$UPLOAD_URL" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
            -F "file=@code.zip;filename=code.zip")

          if [ "$(echo "$RESPONSE" | jq -r '.checksum')" = "null" ]; then
            echo "Error: Upload failed."
            exit 1
          fi

          echo "File uploaded successfully."

      - name: Publish Deposition on Zenodo
        if: success()
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          PUBLISH_URL="https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/publish"
          RESPONSE=$(curl -s -X POST "$PUBLISH_URL" -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          if [ "$(echo "$RESPONSE" | jq -r '.submitted')" != "true" ]; then
            echo "Error: Publishing failed."
            exit 1
          fi

          echo "Deposition published successfully."

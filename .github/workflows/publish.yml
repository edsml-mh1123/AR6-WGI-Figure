name: Publish to Zenodo

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-fig:
    runs-on: ubuntu-latest
    name: Publish code to Zenodo
    permissions:
      contents: write
    steps:
      - name: Checkout the contents of your repository
        uses: actions/checkout@v4

      - name: Create ZIP of code folder
        run: zip -r code.zip code/

      - name: Debug `.zenodo.json` existence
        run: |
          if [ ! -f ".zenodo.json" ]; then
            echo "Error: .zenodo.json does not exist!"
            exit 1
          else
            echo "Contents of .zenodo.json:"
            cat .zenodo.json
          fi
      
      - name: Get or create Zenodo deposition
        id: zenodo_deposition
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          echo "Testing Zenodo API access..."
          TEST_RESPONSE=$(curl -s -X GET "https://sandbox.zenodo.org/api/deposit/depositions" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")

          if echo "$TEST_RESPONSE" | jq -e '.message' >/dev/null; then
            echo "ERROR: $(echo $TEST_RESPONSE | jq -r '.message')"
            exit 1
          fi

          echo "Creating new deposition..."
          CREATE_RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
            -d '{"metadata": {"title": "My Dataset", "upload_type": "dataset", "description": "Description", "creators": [{"name": "Author Name", "affiliation": "Affiliation"}]}}')

          echo "Zenodo API Response: $CREATE_RESPONSE"

          CONCEPT_ID=$(echo "$CREATE_RESPONSE" | jq -r '.conceptrecid // empty')
          DEPOSITION_ID=$(echo "$CREATE_RESPONSE" | jq -r '.id // empty')

          if [ -z "$DEPOSITION_ID" ]; then
            echo "ERROR: Failed to create deposition - Response: $CREATE_RESPONSE"
            exit 1
          fi

          if [ -z "$CONCEPT_ID" ]; then
              echo "Warning: Concept ID is not available. Using Deposition ID instead."
              CONCEPT_ID=$DEPOSITION_ID
          fi

          echo "Created deposition: ID = $DEPOSITION_ID, Concept ID = $CONCEPT_ID"

          echo "CONCEPT_ID=$CONCEPT_ID" >> $GITHUB_ENV
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV
          echo "concept_id=$CONCEPT_ID" >> $GITHUB_OUTPUT

      - name: Debug Zenodo Concept
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
          CONCEPT_ID: ${{ env.CONCEPT_ID }}
        run: |
          echo "Verifying if deposition exists: ID = $CONCEPT_ID"
          RESPONSE=$(curl -s -X GET "https://sandbox.zenodo.org/api/deposit/depositions/$CONCEPT_ID" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
          echo "Response: $RESPONSE"

      
      # - name: Upload the ZIP file to Zenodo
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     ZENODO_SANDBOX_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
      #   uses: zenodraft/action@0.13.3
      #   with:
      #     concept: ${{ steps.zenodo_deposition.outputs.concept_id }}
      #     metadata: .zenodo.json
      #     publish: true
      #     sandbox: true
      #     filenames: |
      #       code.zip
      #     verbose: true

name: Publish to Zenodo

on:
  workflow_run:
    workflows: ["Validate Code"]
    types:
      - completed

jobs:
  publish-fig:
    runs-on: ubuntu-latest
    name: Publish code to Zenodo
    steps:
      - name: Checkout the contents of your repository
        uses: actions/checkout@v4

      - name: Create ZIP of code folder
        run: zip -r code.zip code/

      - name: Debug `.zenodo.json` existence
        run: |
          if [ ! -f ".zenodo.json" ]; then
            echo "Error: .zenodo.json does not exist!"
            exit 1
          else
            echo "Contents of .zenodo.json:"
            cat .zenodo.json
          fi

      - name: Get or create Zenodo deposition
        id: zenodo_deposition
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          RESPONSE=$(curl -s -X GET "https://sandbox.zenodo.org/api/deposit/depositions" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
          if [[ $? -ne 0 ]]; then
            echo "Error fetching deposition list from Zenodo."
            exit 1
          fi
          echo "Zenodo API Response: $RESPONSE"
          
          CONCEPT_ID=$(echo "$RESPONSE" | jq -r '.[] | select(.metadata.prereserve_doi != null) | .conceptdoi' | head -n 1)
          echo "Concept ID: $CONCEPT_ID"
          
          if [ -z "$CONCEPT_ID" ]; then
            RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
              -d @.zenodo.json)
            if [[ $? -ne 0 ]]; then
              echo "Error creating new deposition."
              exit 1
            fi
            DEPOSITION_ID=$(echo $RESPONSE | jq -r '.id')
            echo "Created new deposition with ID: $DEPOSITION_ID"
          else 
            DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.[] | select(.metadata.prereserve_doi != null) | .id' | head -n 1)
            echo "Using existing deposition with ID: $DEPOSITION_ID"
          fi
          echo "DEPOSITION_ID=$DEPOSITION_ID" >> $GITHUB_ENV

      - name: Upload the ZIP file to Zenodo
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          if [ ! -f "code.zip" ]; then
            echo "Error: code.zip file does not exist!"
            exit 1
          fi
          curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/files" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN" \
            -F "file=@code.zip;filename=code.zip"
  
      - name: Check if code.zip exists
        run: |
          if [ -f "code.zip" ]; then
            echo "code.zip exists."
          else
            echo "code.zip does not exist."
            exit 1
          fi

      - name: Keep in Draft Mode
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/submit" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
          if [[ $? -ne 0 ]]; then
            echo "Error keeping deposition in draft mode."
            exit 1
          fi
          echo "Submission completed, kept in draft mode (not published)."

      - name: Publish the Zenodo deposition
        if: success()
        env:
          ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
        run: |
          RESPONSE=$(curl -s -X POST "https://sandbox.zenodo.org/api/deposit/depositions/$DEPOSITION_ID/actions/publish" \
            -H "Authorization: Bearer $ZENODO_ACCESS_TOKEN")
          if [[ $? -ne 0 ]]; then
            echo "Error publishing the deposition."
            exit 1
          fi
          echo "Deposition published successfully."
